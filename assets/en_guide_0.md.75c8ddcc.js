import{_ as n,o as i,c as t,Q as o}from"./chunks/framework.48f6ae32.js";const f=JSON.parse('{"title":"Directory","description":"","frontmatter":{},"headers":[],"relativePath":"en/guide/0.md","filePath":"en/guide/0.md"}'),e={name:"en/guide/0.md"},a=o('<h1 id="directory" tabindex="-1">Directory <a class="header-anchor" href="#directory" aria-label="Permalink to &quot;Directory&quot;">â€‹</a></h1><ul><li>[I, SSM Integrated Understanding](# I SSM Integrated Understanding)</li><li>[1.1 What is SSM Integration?] (#11- What is SSM Integration)</li><li>[1.2 SSM integration core issues clear](#12-SSM integration core issues clear)</li><li>[1.2.1 Question 1: How many IoC containers does SSM integration require?] (#121- First question how many IoC containers are required for SSM integration)</li><li>[1.2.2 Second question: What types of components does each IoC container correspond to?] (#122- Second ask what type of components each IoC container corresponds to)</li><li>[1.2.3 Third Question: IoC container relationship and call direction?] (#123- Third question IoC container relationship and call direction)</li><li>[1.2.4 Fourth question: How many configuration classes and corresponding container relationships?] (#124- Fourth ask how many configuration classes and corresponding container relationships)</li><li>[1.2.5 Fifth Question: IoC Initialization Mode and Configuration Position?] (#125- Fifth question IoC initialization method and configuration position)</li><li>[II, SSM integrated configuration combat](# II SSM integrated configuration combat)</li><li>[2.1 Dependency Integration and Addition](#21- Dependency integration and addition)</li><li>[2.2 Control layer configuration compilation (SpringMVC integration)](#22- Control layer configuration compilation SpringMVC integration)</li><li>[2.3 Business Layer Configuration Authoring (AOP/TX Integration)](#23- Business Layer Configuration Authoring AOP--TX Integration)</li><li>[2.4 Persistence Configuration Authoring (MyBatis Integration)](#24- Persistence Configuration authoring MyBatis integration)</li><li>[2.5 Container Initialization Configuration Class](#25- Container Initialization Configuration class)</li><li>[2.6 Integration Test](#26- Integration Test)</li><li>[3, &quot;Task List Case&quot; front-end program construction and operation](# 3 Task list case front-end program construction and operation)</li><li>[3.1 Integrated Case Introduction and interface Analysis](#31- Integrated Case Introduction and interface Analysis)</li><li>[3.1.1 Case Function Preview](#311- Case function Preview)</li><li>[3.1.2 Interface Analysis](#312 Interface Analysis)</li><li>[3.2 Front-end Engineering Import](#32- Front-end Engineering Import)</li><li>[3.2.1 Front-end Environment Setup](#321- Front-end Environment Setup)</li><li>[3.2.2 Import Front-end Program](#322- Import front-end program)</li><li>[3.3 Start test](#33- Start test)</li><li>[4, &quot;Task List Case&quot; back-end program implementation and testing](# 4 Task List case back-end program implementation and testing)</li><li>[4.1 Preparation](#41-- Preparation)</li><li>[4.2 Function Implementation](#42- Function implementation)</li><li>[4.3 Before and After Coordination](#43- Before and After coordination)</li></ul>',2),r=[a];function s(l,c,d,g,u,p){return i(),t("div",null,r)}const I=n(e,[["render",s]]);export{f as __pageData,I as default};
